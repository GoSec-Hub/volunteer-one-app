// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	models "github.com/VolunteerOne/volunteer-one-app/backend/models"
	mock "github.com/stretchr/testify/mock"
)

// LoginRepository is an autogenerated mock type for the LoginRepository type
type LoginRepository struct {
	mock.Mock
}

// FindUserFromEmail provides a mock function with given fields: _a0, _a1
func (_m *LoginRepository) FindUserFromEmail(_a0 string, _a1 models.Users) (models.Users, error) {
	ret := _m.Called(_a0, _a1)

	var r0 models.Users
	var r1 error
	if rf, ok := ret.Get(0).(func(string, models.Users) (models.Users, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(string, models.Users) models.Users); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(models.Users)
	}

	if rf, ok := ret.Get(1).(func(string, models.Users) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewLoginRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewLoginRepository creates a new instance of LoginRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewLoginRepository(t mockConstructorTestingTNewLoginRepository) *LoginRepository {
	mock := &LoginRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
